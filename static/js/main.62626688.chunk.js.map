{"version":3,"sources":["components/ui/Theme.js","components/Header.js","components/Footer.js","components/Cards/Cards.js","components/fetchFunctions/fetchMainChartData.js","components/fetchFunctions/fetchSecChartData.js","components/Charts/Charts.js","components/fetchFunctions/fetchCardsData.js","components/fetchFunctions/fetchChartsData.js","components/App.js","index.js"],"names":["createMuiTheme","palette","common","greyBlue","blackSecondary","primary","main","secondary","typography","fontFamily","overrides","MuiCssBaseline","MuiAppBar","boxShadow","useStyles","makeStyles","theme","title","margin","textAlign","boxHeader","marginBottom","boxContainer","Header","classes","Box","justifyContent","borderBottom","className","Container","Typography","variant","align","gutterBottom","Icon","Footer","borderTop","Link","href","color","paperBox1","backgroundColor","paperBox2","paperBox3","paperBox4","Cards","data","localData","confirmed","active","recovered","deaths","deltaconfirmed","deltarecovered","deltadeaths","undefined","parseInt","Fragment","Grid","container","spacing","justify","item","component","Card","xs","lg","md","CardContent","fontSize","start","end","duration","fetchMainChartData","dates","total","mainData","options","labels","datasets","label","borderColor","borderWidth","pointRadius","fill","tooltips","mode","position","intersect","titleFontFamily","titleFontColor","bodyFontFamily","bodyFontColor","titleFontSize","bodyFontSize","hover","animation","easing","scales","xAxes","gridLines","display","ticks","callback","dataLabel","index","maxRotation","minRotation","yAxes","fetchSecChartData","selectedState","pointBackgroundColor","stacked","Charts","props","useState","mainChartData","setMainChartData","secChartData","setSecChartData","useEffect","setData","fetchCardsData","initData","statewise","filter","statecode","fetchTodaysData","chartsData","cardsData","tempDay","lastupdatedtime","slice","tempMonth","push","fetchChartsData","historyData","latestData","cases_time_series","forEach","date","totalconfirmed","totaldeceased","totalrecovered","tempStateData","status","toLowerCase","map","dataArray","temp","i","selectBox","form","paddingBottom","marginLeft","minWidth","App","latest_Response","setLatestResponse","history_Response","setHistoryResponse","setSelectedState","stateCode","stateName","stateInfo","setStateInfo","setCardsData","setChartsData","dummy","setDummy","fetchResources","a","axios","get","latestResponse","historyResponse","states_daily","stCode","stName","state","ThemeProvider","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","key","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.62626688.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst greyBlue = \"#f5f5f5\";\r\nconst blackSecondary = \"#212121\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      greyBlue: `${greyBlue}`,\r\n      blackSecondary: `${blackSecondary}`,\r\n    },\r\n    primary: {\r\n      main: `${greyBlue}`,\r\n    },\r\n    secondary: {\r\n      main: `${blackSecondary}`,\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Maven Pro\", \"sans-serif\"],\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"@font-face\": [\"Maven Pro\"],\r\n      },\r\n    },\r\n    MuiAppBar: {\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Box, Typography, Icon, Link } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    margin: \"0px\",\r\n    textAlign: \"center\",\r\n  },\r\n  boxHeader: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n  boxContainer: {\r\n    // marginBottom: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box justifyContent=\"center\" borderBottom={1} className={classes.boxHeader}>\r\n      <Container className={classes.boxContainer}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          COVID19 <Icon className=\"fa fa-biohazard\"></Icon> INDIA\r\n        </Typography>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Icon, Box, Typography, Container, Link } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  boxHeader: {\r\n    marginBottom: \"1rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  boxContainer: {\r\n    // marginBottom: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box justifyContent=\"center\" borderTop={1} className={classes.boxHeader}>\r\n      <Container className={classes.boxContainer}>\r\n        <Typography variant=\"overline\" align=\"center\" gutterBottom>\r\n          Created By - Shubham Khandelwal\r\n          <Link\r\n            href=\"https://github.com/shubhamksm/covid19india\"\r\n            color=\"inherit\"\r\n          >\r\n            <Icon className=\"fa fa-github\"></Icon>\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\n\r\n// UI imports\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Card, CardContent, Icon, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperBox1: {\r\n    margin: \"2%\",\r\n    backgroundColor: \"#ffcdd2\",\r\n    color: \"#b71c1c\",\r\n    borderBottom: \"10px solid #b71c1c\",\r\n    textAlign: \"center !important\",\r\n  },\r\n  paperBox2: {\r\n    margin: \"2%\",\r\n    backgroundColor: \"#bbdefb\",\r\n    color: \"#0d47a1\",\r\n    borderBottom: \"10px solid #0d47a1\",\r\n    textAlign: \"center !important\",\r\n  },\r\n  paperBox3: {\r\n    margin: \"2%\",\r\n    backgroundColor: \"#c8e6c9\",\r\n    color: \"#1b5e20\",\r\n    borderBottom: \"10px solid #1b5e20\",\r\n    textAlign: \"center !important\",\r\n  },\r\n  paperBox4: {\r\n    margin: \"2%\",\r\n    backgroundColor: \"#cfd8dc\",\r\n    color: \"#263238\",\r\n    borderBottom: \"10px solid #263238\",\r\n    textAlign: \"center !important\",\r\n  },\r\n}));\r\n\r\nconst Cards = ({ data }) => {\r\n  const classes = useStyles();\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const localData = {\r\n    confirmed: 0,\r\n    active: 0,\r\n    recovered: 0,\r\n    deaths: 0,\r\n    deltaconfirmed: 0,\r\n    deltarecovered: 0,\r\n    deltadeaths: 0,\r\n  };\r\n\r\n  if (data.confirmed !== undefined) {\r\n    localData.confirmed = parseInt(data.confirmed);\r\n    localData.active = parseInt(data.active);\r\n    localData.recovered = parseInt(data.recovered);\r\n    localData.deaths = parseInt(data.deaths);\r\n    localData.deltaconfirmed = parseInt(data.deltaconfirmed);\r\n    localData.deltarecovered = parseInt(data.deltarecovered);\r\n    localData.deltadeaths = parseInt(data.deltadeaths);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={5}\r\n          lg={5}\r\n          md={5}\r\n          className={classes.paperBox1}\r\n        >\r\n          <CardContent>\r\n            {/* <CountUp end={100} /> */}\r\n            <Typography variant=\"h5\">Confirmed</Typography>\r\n            <Icon className=\"fa fa-virus\" fontSize=\"large\"></Icon>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={localData.confirmed} duration={1.5} />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Today +\r\n              <CountUp\r\n                start={0}\r\n                end={localData.deltaconfirmed}\r\n                duration={2.75}\r\n              />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={5}\r\n          lg={5}\r\n          md={5}\r\n          className={classes.paperBox2}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h5\">Active</Typography>\r\n            <Icon className=\"fa fa-hospital-user\" fontSize=\"large\"></Icon>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={localData.active} duration={1.5} />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={5}\r\n          lg={5}\r\n          md={5}\r\n          className={classes.paperBox3}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h5\">Recovered</Typography>\r\n            <Icon className=\"fa fa-shield-virus\" fontSize=\"large\"></Icon>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={localData.recovered} duration={1.5} />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Today +\r\n              <CountUp\r\n                start={0}\r\n                end={localData.deltarecovered}\r\n                duration={2.75}\r\n              />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={5}\r\n          lg={5}\r\n          md={5}\r\n          className={classes.paperBox4}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h5\">Deaths</Typography>\r\n            <Icon className=\"fa fa-skull-crossbones\" fontSize=\"large\"></Icon>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={localData.deaths} duration={1.5} />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Today +\r\n              <CountUp start={0} end={localData.deltadeaths} duration={2.75} />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","const fetchMainChartData = (dates, total) => {\r\n  const mainData = {\r\n    data: {},\r\n    options: {},\r\n  };\r\n  if (dates === undefined) {\r\n    return mainData;\r\n  } else {\r\n    mainData.data = {\r\n      labels: dates,\r\n      datasets: [\r\n        {\r\n          label: \"Total Confirmed Cases\",\r\n          data: total,\r\n          backgroundColor: \"rgba(255, 100, 100, 1)\",\r\n          borderColor: \"rgba(255, 100, 100, 1)\",\r\n          borderWidth: 1,\r\n          pointRadius: 2,\r\n          // borderWidth: 5,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    mainData.options = {\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        intersect: false,\r\n        backgroundColor: \"#ffcdd2\",\r\n        borderColor: \"#b71c1c\",\r\n        borderWidth: 1,\r\n        titleFontFamily: \"Maven Pro\",\r\n        titleFontColor: \"#b71c1c\",\r\n        bodyFontFamily: \"Maven Pro\",\r\n        bodyFontColor: \"#000000\",\r\n        titleFontSize: 16,\r\n        bodyFontSize: 14,\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n        easing: \"easeInExpo\",\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n            },\r\n            ticks: {\r\n              callback: function (dataLabel, index) {\r\n                // Hide the label of every 2nd dataset. return null to hide the grid line too\r\n                return index % 2 === 0 ? dataLabel : null;\r\n              },\r\n              maxRotation: 0,\r\n              minRotation: 0,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              callback: function (dataLabel, index) {\r\n                // Hide the label of every 2nd dataset. return null to hide the grid line too\r\n                return index % 2 === 0 ? dataLabel : null;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    return mainData;\r\n  }\r\n};\r\n\r\nexport default fetchMainChartData;\r\n","const fetchSecChartData = (\r\n  dates,\r\n  selectedState,\r\n  total,\r\n  active,\r\n  recovered,\r\n  deaths\r\n) => {\r\n  const mainData = {\r\n    data: {},\r\n    options: {},\r\n  };\r\n  if (dates === undefined) {\r\n    return mainData;\r\n  } else {\r\n    if (selectedState !== \"TT\") {\r\n      active = total;\r\n    }\r\n    // Main logic --\r\n    mainData.data = {\r\n      labels: dates,\r\n      datasets: [\r\n        {\r\n          label: \"Deaths\",\r\n          data: deaths,\r\n          backgroundColor: \"#cfd8dc\",\r\n          borderColor: \"#263238\",\r\n          pointBackgroundColor: \"#263238\",\r\n          borderWidth: 1,\r\n          pointRadius: 2,\r\n          // borderWidth: 5,\r\n          // fill: false,\r\n        },\r\n        {\r\n          label: \"Recovered\",\r\n          data: recovered,\r\n          backgroundColor: \"#c8e6c9\",\r\n          borderColor: \"#1b5e20\",\r\n          pointBackgroundColor: \"#1b5e20\",\r\n          borderWidth: 1,\r\n          pointRadius: 2,\r\n          // borderWidth: 5,\r\n          // fill: false,\r\n        },\r\n        {\r\n          label: \"Active Cases\",\r\n          data: active,\r\n          backgroundColor: \"#ffcdd2\",\r\n          pointBackgroundColor: \"rgba(255, 100, 100, 1)\",\r\n          borderColor: \"rgba(255, 100, 100, 1)\",\r\n          borderWidth: 1,\r\n          pointRadius: 2,\r\n          // borderColor: \"rgba(255, 100, 100, 1)\",\r\n          // borderWidth: 5,\r\n          // fill: false,\r\n        },\r\n      ],\r\n    };\r\n    mainData.options = {\r\n      tooltips: {\r\n        mode: \"index\",\r\n        position: \"nearest\",\r\n        intersect: false,\r\n        backgroundColor: \"#ffcdd2\",\r\n        borderColor: \"#b71c1c\",\r\n        borderWidth: 1,\r\n        titleFontFamily: \"Maven Pro\",\r\n        titleFontColor: \"#b71c1c\",\r\n        bodyFontFamily: \"Maven Pro\",\r\n        bodyFontColor: \"#000000\",\r\n        titleFontSize: 16,\r\n        bodyFontSize: 14,\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n        easing: \"easeInExpo\",\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n            },\r\n            ticks: {\r\n              callback: function (dataLabel, index) {\r\n                // Hide the label of every 2nd dataset. return null to hide the grid line too\r\n                return index % 2 === 0 ? dataLabel : null;\r\n              },\r\n              maxRotation: 0,\r\n              minRotation: 0,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: true,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              callback: function (dataLabel, index) {\r\n                // Hide the label of every 2nd dataset. return null to hide the grid line too\r\n                return index % 2 === 0 ? dataLabel : null;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    return mainData;\r\n  }\r\n};\r\n\r\nexport default fetchSecChartData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport fetchMainChartData from \"../fetchFunctions/fetchMainChartData\";\r\nimport fetchSecChartData from \"../fetchFunctions/fetchSecChartData\";\r\n\r\nconst Charts = (props) => {\r\n  const [mainChartData, setMainChartData] = useState({\r\n    data: {},\r\n    options: {},\r\n  });\r\n  const [secChartData, setSecChartData] = useState({\r\n    data: {},\r\n    options: {},\r\n  });\r\n\r\n  // Set state which will be used to render Graphs\r\n  const setData = () => {\r\n    if (props.data === null) {\r\n      return null;\r\n    }\r\n    setMainChartData(fetchMainChartData(props.data.dates, props.data.total));\r\n    setSecChartData(\r\n      fetchSecChartData(\r\n        props.data.dates,\r\n        props.selectedState,\r\n        props.data.total,\r\n        props.data.active,\r\n        props.data.recovered,\r\n        props.data.deaths\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData();\r\n  }, [props.data]);\r\n\r\n  if (!props.data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Line data={mainChartData.data} options={mainChartData.options} />\r\n      <Line data={secChartData.data} options={secChartData.options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","const fetchCardsData = (initData, selectedState) => {\r\n  if (initData.statewise === undefined) {\r\n    // console.log(initData, selectedState);\r\n    return {};\r\n  } else {\r\n    // If selected is Total(India)\r\n    const data = initData.statewise.filter((data) => {\r\n      return data.statecode === selectedState;\r\n    });\r\n    return data[0];\r\n  }\r\n};\r\n\r\nexport default fetchCardsData;\r\n","import fetchCardsData from \"./fetchCardsData\";\r\n\r\nconst fetchTodaysData = (chartsData, cardsData) => {\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  const tempDay = cardsData.lastupdatedtime.slice(0, 2);\r\n  const tempMonth = cardsData.lastupdatedtime.slice(3, 5);\r\n  chartsData.dates.push(`${tempDay} ${months[parseInt(tempMonth) - 1]}`);\r\n  chartsData.total.push(cardsData.confirmed);\r\n  chartsData.active.push(cardsData.active);\r\n  chartsData.recovered.push(cardsData.recovered);\r\n  chartsData.deaths.push(cardsData.deaths);\r\n  return chartsData;\r\n};\r\n\r\nconst fetchChartsData = (historyData, latestData, selectedState) => {\r\n  if (historyData[0] === undefined) {\r\n    return {};\r\n  } else {\r\n    const chartsData = {\r\n      dates: [],\r\n      total: [],\r\n      active: [],\r\n      recovered: [],\r\n      deaths: [],\r\n    };\r\n    const cardsData = fetchCardsData(latestData, selectedState);\r\n    // Logic for Total scenario\r\n    if (selectedState === \"TT\") {\r\n      latestData.cases_time_series.forEach((data) => {\r\n        chartsData.dates.push(data.date);\r\n        chartsData.total.push(data.totalconfirmed);\r\n        chartsData.active.push(\r\n          data.totalconfirmed - data.totaldeceased - data.totalrecovered\r\n        );\r\n        chartsData.recovered.push(data.totalrecovered);\r\n        chartsData.deaths.push(data.totaldeceased);\r\n      });\r\n      // console.log(dates, total, active, recovered, deaths);\r\n\r\n      return fetchTodaysData(chartsData, cardsData);\r\n    } else {\r\n      const tempStateData = {\r\n        confirmed: [],\r\n        recovered: [],\r\n        deaths: [],\r\n        dates: [],\r\n      };\r\n      historyData.forEach((data) => {\r\n        if (data.status === \"Confirmed\") {\r\n          if (data[selectedState.toLowerCase()]) {\r\n            tempStateData.confirmed.push(\r\n              parseInt(data[selectedState.toLowerCase()])\r\n            );\r\n            tempStateData.dates.push(data[\"date\"]);\r\n          }\r\n        } else if (data.status === \"Recovered\") {\r\n          if (data[selectedState.toLowerCase()]) {\r\n            tempStateData.recovered.push(\r\n              parseInt(data[selectedState.toLowerCase()])\r\n            );\r\n          }\r\n        } else if (data.status === \"Deceased\") {\r\n          if (data[selectedState.toLowerCase()]) {\r\n            tempStateData.deaths.push(\r\n              parseInt(data[selectedState.toLowerCase()])\r\n            );\r\n          }\r\n        }\r\n      });\r\n      tempStateData.confirmed.map((data, index, dataArray) => {\r\n        let temp = 0;\r\n        let i = 0;\r\n        while (i <= index) {\r\n          temp = temp + dataArray[i];\r\n          i = i + 1;\r\n        }\r\n        chartsData.total.push(temp);\r\n        chartsData.active.push(temp);\r\n      });\r\n      tempStateData.recovered.map((data, index, dataArray) => {\r\n        let temp = 0;\r\n        let i = 0;\r\n        while (i <= index) {\r\n          temp = temp + dataArray[i];\r\n          i = i + 1;\r\n        }\r\n        chartsData.recovered.push(temp);\r\n      });\r\n      tempStateData.deaths.map((data, index, dataArray) => {\r\n        let temp = 0;\r\n        let i = 0;\r\n        while (i <= index) {\r\n          temp = temp + dataArray[i];\r\n          i = i + 1;\r\n        }\r\n        chartsData.deaths.push(temp);\r\n      });\r\n      chartsData.dates = tempStateData.dates;\r\n      return fetchTodaysData(chartsData, cardsData);\r\n    }\r\n  }\r\n};\r\n\r\nexport default fetchChartsData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport theme from \"./ui/Theme\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Cards from \"./Cards/Cards\";\r\nimport Charts from \"./Charts/Charts\";\r\nimport fetchCardsData from \"./fetchFunctions/fetchCardsData\";\r\nimport fetchChartsData from \"./fetchFunctions/fetchChartsData\";\r\nimport {\r\n  Box,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectBox: {\r\n    // textAlign: \"center\",\r\n  },\r\n  form: {\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"2rem\",\r\n    minWidth: \"25%\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  // Latest Response state\r\n  const [latest_Response, setLatestResponse] = useState({});\r\n  // History response state\r\n  const [history_Response, setHistoryResponse] = useState([]);\r\n  // Selected States state\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  // State code and state name\r\n  const [stateInfo, setStateInfo] = useState({\r\n    stateCode: [],\r\n    stateName: [],\r\n  });\r\n  // Cards data state\r\n  const [cardsData, setCardsData] = useState({});\r\n  // Charts data state\r\n  const [chartsData, setChartsData] = useState({});\r\n  // dummy dataset\r\n  const [dummy, setDummy] = useState(\"\");\r\n\r\n  // Main API call for total and statewise data, and update states accordingly\r\n\r\n  // eslint-disable-next-line\r\n  const fetchResources = async () => {\r\n    // Latest response needed for cards\r\n    const latestResponse = await axios.get(\r\n      \"https://api.covid19india.org/data.json\"\r\n    );\r\n\r\n    // history response needed for Charts\r\n    const historyResponse = await axios.get(\r\n      \"https://api.covid19india.org/states_daily.json\"\r\n    );\r\n\r\n    // set Latest Response\r\n    setLatestResponse(latestResponse.data);\r\n    // set History response state\r\n    setHistoryResponse(historyResponse.data.states_daily);\r\n    // set initial State\r\n    // set initial State\r\n    setSelectedState(latestResponse.data.statewise[0].statecode);\r\n    setDummy(\"Dummy\");\r\n    // set all states information\r\n    const stCode = [];\r\n    const stName = [];\r\n    if (latest_Response.statewise !== undefined) {\r\n      latest_Response.statewise.forEach((data) => {\r\n        stCode.push(data.statecode);\r\n        stName.push(data.state);\r\n      });\r\n    }\r\n    setStateInfo({ stateCode: stCode, stateName: stName });\r\n  };\r\n\r\n  // Useffect with selected state so that it is called when selected state is changed.\r\n  const fetchComponentsData = () => {\r\n    // get cards data and updated in Cards -state\r\n    setCardsData(fetchCardsData(latest_Response, selectedState));\r\n\r\n    // get charts data and update in Chatrs-state\r\n    setChartsData(\r\n      fetchChartsData(history_Response, latest_Response, selectedState)\r\n    );\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    fetchResources();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    fetchComponentsData();\r\n  }, [selectedState]);\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedState(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <Header />\r\n        <Container>\r\n          <Box className={classes.selectBox}>\r\n            <FormControl className={classes.form}>\r\n              <InputLabel id=\"select-state\">Select State</InputLabel>\r\n              <Select\r\n                labelId=\"select-state\"\r\n                id=\"select-state\"\r\n                value={selectedState}\r\n                onChange={handleChange}\r\n              >\r\n                {stateInfo.stateCode.map((data, index) => {\r\n                  return (\r\n                    <MenuItem value={data} key={data}>\r\n                      {stateInfo.stateName[index]}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6} md={6} xs={12}>\r\n              <Cards data={cardsData} />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xs={12}>\r\n              <Charts data={chartsData} selectedState={selectedState} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}